if (UserCenterDebug.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode.toInteger()
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    sourceSets {
        main {
            if (UserCenterDebug.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //release 时 debug 目录下文件不需要合并到主工程
                    exclude 'debug/**'
                }
            }
        }
    }

    //在使用模块化组件CC重构时遇到了 Unresolved reference的问题。
    //错误原因是 父模块使用无法直接使用子模块的布局，kotlin-android-extensions无法解析（com.android.tools.build:gradle 版本3.0 以上。）
    //
    //解决办法：
    //在父项目的build文件下添加
    androidExtensions {
        experimental = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    kapt "com.alibaba:arouter-compiler:${aRouterCompilerVersion}"
    implementation project(':provider_library')
    implementation project(':web_library')
}
